{
  "{\"assumptions\":{},\"sourceRoot\":\"E:\\\\React codemod\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\React codemod\",\"filename\":\"E:\\\\React codemod\\\\transform.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\React codemod\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "E:\\React codemod\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\React codemod",
      "filename": "E:\\React codemod\\transform.js",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "E:\\React codemod",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\React codemod\\transform.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ]
        ]
      },
      "generatorOpts": {
        "filename": "E:\\React codemod\\transform.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\React codemod\\",
        "sourceFileName": "transform.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformer;\nexports.parser = void 0;\n// jscodeshift can take a parser, like \"babel\", \"babylon\", \"flow\", \"ts\", or \"tsx\"\n// Read more: https://github.com/facebook/jscodeshift#parser\nconst parser = \"babel\"; // Press ctrl+space for code completion\n\nexports.parser = parser;\n\nfunction transformer(file, api) {\n  const j = api.jscodeshift;\n  const root = j(file.source);\n  const {\n    statement\n  } = j.template; //console.log(j.template);\n\n  root.find(j.ClassDeclaration).find(j.MemberExpression, {\n    object: {\n      type: \"MemberExpression\",\n      object: {\n        type: \"ThisExpression\"\n      },\n      property: {\n        name: \"props\"\n      }\n    }\n  }).forEach(p => {\n    //   console.log(p.value.property.name);\n    j(p).replaceWith(`props.${p.value.property.name}`);\n  });\n  root.find(j.ClassDeclaration).replaceWith(p => {\n    console.log(p);\n    return statement`function ${p.value.id.name} (props) {\n                ${p.value.body.body}\n\t\t\t  \n\t\t  }`;\n  });\n  return root.toSource();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZm9ybS5qcyJdLCJuYW1lcyI6WyJwYXJzZXIiLCJ0cmFuc2Zvcm1lciIsImZpbGUiLCJhcGkiLCJqIiwianNjb2Rlc2hpZnQiLCJyb290Iiwic291cmNlIiwic3RhdGVtZW50IiwidGVtcGxhdGUiLCJmaW5kIiwiQ2xhc3NEZWNsYXJhdGlvbiIsIk1lbWJlckV4cHJlc3Npb24iLCJvYmplY3QiLCJ0eXBlIiwicHJvcGVydHkiLCJuYW1lIiwiZm9yRWFjaCIsInAiLCJyZXBsYWNlV2l0aCIsInZhbHVlIiwiY29uc29sZSIsImxvZyIsImlkIiwiYm9keSIsInRvU291cmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNPLE1BQU1BLE1BQU0sR0FBRyxPQUFmLEMsQ0FFUDs7OztBQUNlLFNBQVNDLFdBQVQsQ0FBcUJDLElBQXJCLEVBQTJCQyxHQUEzQixFQUFnQztBQUM3QyxRQUFNQyxDQUFDLEdBQUdELEdBQUcsQ0FBQ0UsV0FBZDtBQUVBLFFBQU1DLElBQUksR0FBR0YsQ0FBQyxDQUFDRixJQUFJLENBQUNLLE1BQU4sQ0FBZDtBQUNBLFFBQU07QUFBRUMsSUFBQUE7QUFBRixNQUFnQkosQ0FBQyxDQUFDSyxRQUF4QixDQUo2QyxDQUs3Qzs7QUFFQUgsRUFBQUEsSUFBSSxDQUNESSxJQURILENBQ1FOLENBQUMsQ0FBQ08sZ0JBRFYsRUFFR0QsSUFGSCxDQUVRTixDQUFDLENBQUNRLGdCQUZWLEVBRTRCO0FBQ3hCQyxJQUFBQSxNQUFNLEVBQUU7QUFDTkMsTUFBQUEsSUFBSSxFQUFFLGtCQURBO0FBRU5ELE1BQUFBLE1BQU0sRUFBRTtBQUFFQyxRQUFBQSxJQUFJLEVBQUU7QUFBUixPQUZGO0FBR05DLE1BQUFBLFFBQVEsRUFBRTtBQUFFQyxRQUFBQSxJQUFJLEVBQUU7QUFBUjtBQUhKO0FBRGdCLEdBRjVCLEVBU0dDLE9BVEgsQ0FTWUMsQ0FBRCxJQUFPO0FBQ2Q7QUFDQWQsSUFBQUEsQ0FBQyxDQUFDYyxDQUFELENBQUQsQ0FBS0MsV0FBTCxDQUFrQixTQUFRRCxDQUFDLENBQUNFLEtBQUYsQ0FBUUwsUUFBUixDQUFpQkMsSUFBSyxFQUFoRDtBQUNELEdBWkg7QUFjQVYsRUFBQUEsSUFBSSxDQUFDSSxJQUFMLENBQVVOLENBQUMsQ0FBQ08sZ0JBQVosRUFBOEJRLFdBQTlCLENBQTJDRCxDQUFELElBQU87QUFDL0NHLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixDQUFaO0FBRUEsV0FBT1YsU0FBVSxZQUFXVSxDQUFDLENBQUNFLEtBQUYsQ0FBUUcsRUFBUixDQUFXUCxJQUFLO0FBQ2hELGtCQUFrQkUsQ0FBQyxDQUFDRSxLQUFGLENBQVFJLElBQVIsQ0FBYUEsSUFBSztBQUNwQztBQUNBLE1BSEk7QUFJRCxHQVBEO0FBU0EsU0FBT2xCLElBQUksQ0FBQ21CLFFBQUwsRUFBUDtBQUNEIiwic291cmNlUm9vdCI6IkU6XFxSZWFjdCBjb2RlbW9kXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqc2NvZGVzaGlmdCBjYW4gdGFrZSBhIHBhcnNlciwgbGlrZSBcImJhYmVsXCIsIFwiYmFieWxvblwiLCBcImZsb3dcIiwgXCJ0c1wiLCBvciBcInRzeFwiXHJcbi8vIFJlYWQgbW9yZTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2pzY29kZXNoaWZ0I3BhcnNlclxyXG5leHBvcnQgY29uc3QgcGFyc2VyID0gXCJiYWJlbFwiO1xyXG5cclxuLy8gUHJlc3MgY3RybCtzcGFjZSBmb3IgY29kZSBjb21wbGV0aW9uXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zZm9ybWVyKGZpbGUsIGFwaSkge1xyXG4gIGNvbnN0IGogPSBhcGkuanNjb2Rlc2hpZnQ7XHJcblxyXG4gIGNvbnN0IHJvb3QgPSBqKGZpbGUuc291cmNlKTtcclxuICBjb25zdCB7IHN0YXRlbWVudCB9ID0gai50ZW1wbGF0ZTtcclxuICAvL2NvbnNvbGUubG9nKGoudGVtcGxhdGUpO1xyXG5cclxuICByb290XHJcbiAgICAuZmluZChqLkNsYXNzRGVjbGFyYXRpb24pXHJcbiAgICAuZmluZChqLk1lbWJlckV4cHJlc3Npb24sIHtcclxuICAgICAgb2JqZWN0OiB7XHJcbiAgICAgICAgdHlwZTogXCJNZW1iZXJFeHByZXNzaW9uXCIsXHJcbiAgICAgICAgb2JqZWN0OiB7IHR5cGU6IFwiVGhpc0V4cHJlc3Npb25cIiB9LFxyXG4gICAgICAgIHByb3BlcnR5OiB7IG5hbWU6IFwicHJvcHNcIiB9XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICAuZm9yRWFjaCgocCkgPT4ge1xyXG4gICAgICAvLyAgIGNvbnNvbGUubG9nKHAudmFsdWUucHJvcGVydHkubmFtZSk7XHJcbiAgICAgIGoocCkucmVwbGFjZVdpdGgoYHByb3BzLiR7cC52YWx1ZS5wcm9wZXJ0eS5uYW1lfWApO1xyXG4gICAgfSk7XHJcblxyXG4gIHJvb3QuZmluZChqLkNsYXNzRGVjbGFyYXRpb24pLnJlcGxhY2VXaXRoKChwKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhwKTtcclxuXHJcbiAgICByZXR1cm4gc3RhdGVtZW50YGZ1bmN0aW9uICR7cC52YWx1ZS5pZC5uYW1lfSAocHJvcHMpIHtcclxuICAgICAgICAgICAgICAgICR7cC52YWx1ZS5ib2R5LmJvZHl9XHJcblx0XHRcdCAgXHJcblx0XHQgIH1gO1xyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gcm9vdC50b1NvdXJjZSgpO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "transform.js"
      ],
      "names": [
        "parser",
        "transformer",
        "file",
        "api",
        "j",
        "jscodeshift",
        "root",
        "source",
        "statement",
        "template",
        "find",
        "ClassDeclaration",
        "MemberExpression",
        "object",
        "type",
        "property",
        "name",
        "forEach",
        "p",
        "replaceWith",
        "value",
        "console",
        "log",
        "id",
        "body",
        "toSource"
      ],
      "mappings": ";;;;;;;AAAA;AACA;AACO,MAAMA,MAAM,GAAG,OAAf,C,CAEP;;;;AACe,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,CAAC,GAAGD,GAAG,CAACE,WAAd;AAEA,QAAMC,IAAI,GAAGF,CAAC,CAACF,IAAI,CAACK,MAAN,CAAd;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBJ,CAAC,CAACK,QAAxB,CAJ6C,CAK7C;;AAEAH,EAAAA,IAAI,CACDI,IADH,CACQN,CAAC,CAACO,gBADV,EAEGD,IAFH,CAEQN,CAAC,CAACQ,gBAFV,EAE4B;AACxBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,kBADA;AAEND,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAFF;AAGNC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAHJ;AADgB,GAF5B,EASGC,OATH,CASYC,CAAD,IAAO;AACd;AACAd,IAAAA,CAAC,CAACc,CAAD,CAAD,CAAKC,WAAL,CAAkB,SAAQD,CAAC,CAACE,KAAF,CAAQL,QAAR,CAAiBC,IAAK,EAAhD;AACD,GAZH;AAcAV,EAAAA,IAAI,CAACI,IAAL,CAAUN,CAAC,CAACO,gBAAZ,EAA8BQ,WAA9B,CAA2CD,CAAD,IAAO;AAC/CG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AAEA,WAAOV,SAAU,YAAWU,CAAC,CAACE,KAAF,CAAQG,EAAR,CAAWP,IAAK;AAChD,kBAAkBE,CAAC,CAACE,KAAF,CAAQI,IAAR,CAAaA,IAAK;AACpC;AACA,MAHI;AAID,GAPD;AASA,SAAOlB,IAAI,CAACmB,QAAL,EAAP;AACD",
      "sourceRoot": "E:\\React codemod\\",
      "sourcesContent": [
        "// jscodeshift can take a parser, like \"babel\", \"babylon\", \"flow\", \"ts\", or \"tsx\"\r\n// Read more: https://github.com/facebook/jscodeshift#parser\r\nexport const parser = \"babel\";\r\n\r\n// Press ctrl+space for code completion\r\nexport default function transformer(file, api) {\r\n  const j = api.jscodeshift;\r\n\r\n  const root = j(file.source);\r\n  const { statement } = j.template;\r\n  //console.log(j.template);\r\n\r\n  root\r\n    .find(j.ClassDeclaration)\r\n    .find(j.MemberExpression, {\r\n      object: {\r\n        type: \"MemberExpression\",\r\n        object: { type: \"ThisExpression\" },\r\n        property: { name: \"props\" }\r\n      }\r\n    })\r\n    .forEach((p) => {\r\n      //   console.log(p.value.property.name);\r\n      j(p).replaceWith(`props.${p.value.property.name}`);\r\n    });\r\n\r\n  root.find(j.ClassDeclaration).replaceWith((p) => {\r\n    console.log(p);\r\n\r\n    return statement`function ${p.value.id.name} (props) {\r\n                ${p.value.body.body}\r\n\t\t\t  \r\n\t\t  }`;\r\n  });\r\n\r\n  return root.toSource();\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1631867012690
  },
  "{\"assumptions\":{},\"sourceRoot\":\"E:\\\\React codemod\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\React codemod\",\"filename\":\"E:\\\\React codemod\\\\transformtoFunction.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\React codemod\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "E:\\React codemod\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\React codemod",
      "filename": "E:\\React codemod\\transformtoFunction.js",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "E:\\React codemod",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\React codemod\\transformtoFunction.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ]
        ]
      },
      "generatorOpts": {
        "filename": "E:\\React codemod\\transformtoFunction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\React codemod\\",
        "sourceFileName": "transformtoFunction.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformer;\nexports.parser = void 0;\n// jscodeshift can take a parser, like \"babel\", \"babylon\", \"flow\", \"ts\", or \"tsx\"\n// Read more: https://github.com/facebook/jscodeshift#parser\nconst parser = \"babel\"; // Press ctrl+space for code completion\n\nexports.parser = parser;\n\nfunction transformer(file, api) {\n  const j = api.jscodeshift;\n  const root = j(file.source);\n  const {\n    statement\n  } = j.template; //console.log(j.template);\n\n  root.find(j.ClassDeclaration).find(j.MemberExpression, {\n    object: {\n      type: \"MemberExpression\",\n      object: {\n        type: \"ThisExpression\"\n      },\n      property: {\n        name: \"props\"\n      }\n    }\n  }).forEach(p => {\n    //   console.log(p.value.property.name);\n    j(p).replaceWith(`props.${p.value.property.name}`);\n  });\n  root.find(j.ClassDeclaration).replaceWith(p => {\n    console.log(p);\n    return statement`function ${p.value.id.name} (props) {\n                ${p.value.body.body}\n\t\t\t  \n\t\t  }`;\n  });\n  return root.toSource();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZm9ybXRvRnVuY3Rpb24uanMiXSwibmFtZXMiOlsicGFyc2VyIiwidHJhbnNmb3JtZXIiLCJmaWxlIiwiYXBpIiwiaiIsImpzY29kZXNoaWZ0Iiwicm9vdCIsInNvdXJjZSIsInN0YXRlbWVudCIsInRlbXBsYXRlIiwiZmluZCIsIkNsYXNzRGVjbGFyYXRpb24iLCJNZW1iZXJFeHByZXNzaW9uIiwib2JqZWN0IiwidHlwZSIsInByb3BlcnR5IiwibmFtZSIsImZvckVhY2giLCJwIiwicmVwbGFjZVdpdGgiLCJ2YWx1ZSIsImNvbnNvbGUiLCJsb2ciLCJpZCIsImJvZHkiLCJ0b1NvdXJjZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDTyxNQUFNQSxNQUFNLEdBQUcsT0FBZixDLENBRVA7Ozs7QUFDZSxTQUFTQyxXQUFULENBQXFCQyxJQUFyQixFQUEyQkMsR0FBM0IsRUFBZ0M7QUFDN0MsUUFBTUMsQ0FBQyxHQUFHRCxHQUFHLENBQUNFLFdBQWQ7QUFFQSxRQUFNQyxJQUFJLEdBQUdGLENBQUMsQ0FBQ0YsSUFBSSxDQUFDSyxNQUFOLENBQWQ7QUFDQSxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBZ0JKLENBQUMsQ0FBQ0ssUUFBeEIsQ0FKNkMsQ0FLN0M7O0FBRUFILEVBQUFBLElBQUksQ0FDREksSUFESCxDQUNRTixDQUFDLENBQUNPLGdCQURWLEVBRUdELElBRkgsQ0FFUU4sQ0FBQyxDQUFDUSxnQkFGVixFQUU0QjtBQUN4QkMsSUFBQUEsTUFBTSxFQUFFO0FBQ05DLE1BQUFBLElBQUksRUFBRSxrQkFEQTtBQUVORCxNQUFBQSxNQUFNLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFO0FBQVIsT0FGRjtBQUdOQyxNQUFBQSxRQUFRLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFO0FBQVI7QUFISjtBQURnQixHQUY1QixFQVNHQyxPQVRILENBU1lDLENBQUQsSUFBTztBQUNkO0FBQ0FkLElBQUFBLENBQUMsQ0FBQ2MsQ0FBRCxDQUFELENBQUtDLFdBQUwsQ0FBa0IsU0FBUUQsQ0FBQyxDQUFDRSxLQUFGLENBQVFMLFFBQVIsQ0FBaUJDLElBQUssRUFBaEQ7QUFDRCxHQVpIO0FBY0FWLEVBQUFBLElBQUksQ0FBQ0ksSUFBTCxDQUFVTixDQUFDLENBQUNPLGdCQUFaLEVBQThCUSxXQUE5QixDQUEyQ0QsQ0FBRCxJQUFPO0FBQy9DRyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosQ0FBWjtBQUVBLFdBQU9WLFNBQVUsWUFBV1UsQ0FBQyxDQUFDRSxLQUFGLENBQVFHLEVBQVIsQ0FBV1AsSUFBSztBQUNoRCxrQkFBa0JFLENBQUMsQ0FBQ0UsS0FBRixDQUFRSSxJQUFSLENBQWFBLElBQUs7QUFDcEM7QUFDQSxNQUhJO0FBSUQsR0FQRDtBQVNBLFNBQU9sQixJQUFJLENBQUNtQixRQUFMLEVBQVA7QUFDRCIsInNvdXJjZVJvb3QiOiJFOlxcUmVhY3QgY29kZW1vZFxcIiwic291cmNlc0NvbnRlbnQiOlsiLy8ganNjb2Rlc2hpZnQgY2FuIHRha2UgYSBwYXJzZXIsIGxpa2UgXCJiYWJlbFwiLCBcImJhYnlsb25cIiwgXCJmbG93XCIsIFwidHNcIiwgb3IgXCJ0c3hcIlxyXG4vLyBSZWFkIG1vcmU6IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9qc2NvZGVzaGlmdCNwYXJzZXJcclxuZXhwb3J0IGNvbnN0IHBhcnNlciA9IFwiYmFiZWxcIjtcclxuXHJcbi8vIFByZXNzIGN0cmwrc3BhY2UgZm9yIGNvZGUgY29tcGxldGlvblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2Zvcm1lcihmaWxlLCBhcGkpIHtcclxuICBjb25zdCBqID0gYXBpLmpzY29kZXNoaWZ0O1xyXG5cclxuICBjb25zdCByb290ID0gaihmaWxlLnNvdXJjZSk7XHJcbiAgY29uc3QgeyBzdGF0ZW1lbnQgfSA9IGoudGVtcGxhdGU7XHJcbiAgLy9jb25zb2xlLmxvZyhqLnRlbXBsYXRlKTtcclxuXHJcbiAgcm9vdFxyXG4gICAgLmZpbmQoai5DbGFzc0RlY2xhcmF0aW9uKVxyXG4gICAgLmZpbmQoai5NZW1iZXJFeHByZXNzaW9uLCB7XHJcbiAgICAgIG9iamVjdDoge1xyXG4gICAgICAgIHR5cGU6IFwiTWVtYmVyRXhwcmVzc2lvblwiLFxyXG4gICAgICAgIG9iamVjdDogeyB0eXBlOiBcIlRoaXNFeHByZXNzaW9uXCIgfSxcclxuICAgICAgICBwcm9wZXJ0eTogeyBuYW1lOiBcInByb3BzXCIgfVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgLmZvckVhY2goKHApID0+IHtcclxuICAgICAgLy8gICBjb25zb2xlLmxvZyhwLnZhbHVlLnByb3BlcnR5Lm5hbWUpO1xyXG4gICAgICBqKHApLnJlcGxhY2VXaXRoKGBwcm9wcy4ke3AudmFsdWUucHJvcGVydHkubmFtZX1gKTtcclxuICAgIH0pO1xyXG5cclxuICByb290LmZpbmQoai5DbGFzc0RlY2xhcmF0aW9uKS5yZXBsYWNlV2l0aCgocCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2cocCk7XHJcblxyXG4gICAgcmV0dXJuIHN0YXRlbWVudGBmdW5jdGlvbiAke3AudmFsdWUuaWQubmFtZX0gKHByb3BzKSB7XHJcbiAgICAgICAgICAgICAgICAke3AudmFsdWUuYm9keS5ib2R5fVxyXG5cdFx0XHQgIFxyXG5cdFx0ICB9YDtcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHJvb3QudG9Tb3VyY2UoKTtcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "transformtoFunction.js"
      ],
      "names": [
        "parser",
        "transformer",
        "file",
        "api",
        "j",
        "jscodeshift",
        "root",
        "source",
        "statement",
        "template",
        "find",
        "ClassDeclaration",
        "MemberExpression",
        "object",
        "type",
        "property",
        "name",
        "forEach",
        "p",
        "replaceWith",
        "value",
        "console",
        "log",
        "id",
        "body",
        "toSource"
      ],
      "mappings": ";;;;;;;AAAA;AACA;AACO,MAAMA,MAAM,GAAG,OAAf,C,CAEP;;;;AACe,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,CAAC,GAAGD,GAAG,CAACE,WAAd;AAEA,QAAMC,IAAI,GAAGF,CAAC,CAACF,IAAI,CAACK,MAAN,CAAd;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBJ,CAAC,CAACK,QAAxB,CAJ6C,CAK7C;;AAEAH,EAAAA,IAAI,CACDI,IADH,CACQN,CAAC,CAACO,gBADV,EAEGD,IAFH,CAEQN,CAAC,CAACQ,gBAFV,EAE4B;AACxBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,kBADA;AAEND,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAFF;AAGNC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAHJ;AADgB,GAF5B,EASGC,OATH,CASYC,CAAD,IAAO;AACd;AACAd,IAAAA,CAAC,CAACc,CAAD,CAAD,CAAKC,WAAL,CAAkB,SAAQD,CAAC,CAACE,KAAF,CAAQL,QAAR,CAAiBC,IAAK,EAAhD;AACD,GAZH;AAcAV,EAAAA,IAAI,CAACI,IAAL,CAAUN,CAAC,CAACO,gBAAZ,EAA8BQ,WAA9B,CAA2CD,CAAD,IAAO;AAC/CG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AAEA,WAAOV,SAAU,YAAWU,CAAC,CAACE,KAAF,CAAQG,EAAR,CAAWP,IAAK;AAChD,kBAAkBE,CAAC,CAACE,KAAF,CAAQI,IAAR,CAAaA,IAAK;AACpC;AACA,MAHI;AAID,GAPD;AASA,SAAOlB,IAAI,CAACmB,QAAL,EAAP;AACD",
      "sourceRoot": "E:\\React codemod\\",
      "sourcesContent": [
        "// jscodeshift can take a parser, like \"babel\", \"babylon\", \"flow\", \"ts\", or \"tsx\"\r\n// Read more: https://github.com/facebook/jscodeshift#parser\r\nexport const parser = \"babel\";\r\n\r\n// Press ctrl+space for code completion\r\nexport default function transformer(file, api) {\r\n  const j = api.jscodeshift;\r\n\r\n  const root = j(file.source);\r\n  const { statement } = j.template;\r\n  //console.log(j.template);\r\n\r\n  root\r\n    .find(j.ClassDeclaration)\r\n    .find(j.MemberExpression, {\r\n      object: {\r\n        type: \"MemberExpression\",\r\n        object: { type: \"ThisExpression\" },\r\n        property: { name: \"props\" }\r\n      }\r\n    })\r\n    .forEach((p) => {\r\n      //   console.log(p.value.property.name);\r\n      j(p).replaceWith(`props.${p.value.property.name}`);\r\n    });\r\n\r\n  root.find(j.ClassDeclaration).replaceWith((p) => {\r\n    console.log(p);\r\n\r\n    return statement`function ${p.value.id.name} (props) {\r\n                ${p.value.body.body}\r\n\t\t\t  \r\n\t\t  }`;\r\n  });\r\n\r\n  return root.toSource();\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1633063706569
  },
  "{\"assumptions\":{},\"sourceRoot\":\"E:\\\\React codemod\\\\\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"E:\\\\React codemod\",\"filename\":\"E:\\\\React codemod\\\\transformToUseStateHook.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\React codemod\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "E:\\React codemod\\",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "E:\\React codemod",
      "filename": "E:\\React codemod\\transformToUseStateHook.js",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "E:\\React codemod",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\React codemod\\transformToUseStateHook.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ]
        ]
      },
      "generatorOpts": {
        "filename": "E:\\React codemod\\transformToUseStateHook.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\React codemod\\",
        "sourceFileName": "transformToUseStateHook.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformer;\nexports.parser = void 0;\nconst parser = \"babel\"; // Press ctrl+space for code completion\n\nexports.parser = parser;\n\nfunction transformer(file, api) {\n  const j = api.jscodeshift; //console.log(j(file.source));\n\n  const root = j(file.source);\n  const {\n    statement\n  } = j.template;\n  let string = \" \";\n  let stateVariables = {};\n  var fs2 = \"\";\n  j(file.source).find(j.ClassDeclaration).forEach(p => {\n    let i = 1;\n    var fs_slice = file.source.slice(p.value.start, p.value.end);\n    const prop = j(fs_slice).find(j.ClassProperty, {\n      value: {\n        type: \"ObjectExpression\"\n      }\n    });\n    let class_name = p.value.id.name;\n    const start = prop.__paths[0].value.start;\n    const end = prop.__paths[0].value.end;\n    console.log(p); //  console.log(class_name);\n    //console.log(p.value.body.body);\n\n    let class_properties = p.value.body.body;\n    class_properties.forEach(p => {\n      if (p.value.type == \"ObjectExpression\") {\n        //console.log(p.value);\n        const properties = p.value.properties;\n\n        for (let i = 0; i < properties.length; i++) {\n          //console.log(properties[i].key.name + \" \" + properties[i].value.value);\n          stateVariables[properties[i].key.name] = properties[i].value.value;\n          string += `const [${properties[i].key.name},${properties[i].key.name}Setter]=useState('${properties[i].value.value}');\\n`;\n        }\n      }\n    }); //console.log(string);\n\n    fs2 += j(fs_slice).find(j.ClassProperty, {\n      value: {\n        type: \"ObjectExpression\"\n      }\n    }).replaceWith(string).toSource();\n    console.log(fs2);\n    string = \"\";\n  });\n  return fs2;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZm9ybVRvVXNlU3RhdGVIb29rLmpzIl0sIm5hbWVzIjpbInBhcnNlciIsInRyYW5zZm9ybWVyIiwiZmlsZSIsImFwaSIsImoiLCJqc2NvZGVzaGlmdCIsInJvb3QiLCJzb3VyY2UiLCJzdGF0ZW1lbnQiLCJ0ZW1wbGF0ZSIsInN0cmluZyIsInN0YXRlVmFyaWFibGVzIiwiZnMyIiwiZmluZCIsIkNsYXNzRGVjbGFyYXRpb24iLCJmb3JFYWNoIiwicCIsImkiLCJmc19zbGljZSIsInNsaWNlIiwidmFsdWUiLCJzdGFydCIsImVuZCIsInByb3AiLCJDbGFzc1Byb3BlcnR5IiwidHlwZSIsImNsYXNzX25hbWUiLCJpZCIsIm5hbWUiLCJfX3BhdGhzIiwiY29uc29sZSIsImxvZyIsImNsYXNzX3Byb3BlcnRpZXMiLCJib2R5IiwicHJvcGVydGllcyIsImxlbmd0aCIsImtleSIsInJlcGxhY2VXaXRoIiwidG9Tb3VyY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFTyxNQUFNQSxNQUFNLEdBQUcsT0FBZixDLENBRVA7Ozs7QUFDZSxTQUFTQyxXQUFULENBQXFCQyxJQUFyQixFQUEyQkMsR0FBM0IsRUFBZ0M7QUFDN0MsUUFBTUMsQ0FBQyxHQUFHRCxHQUFHLENBQUNFLFdBQWQsQ0FENkMsQ0FFN0M7O0FBQ0EsUUFBTUMsSUFBSSxHQUFHRixDQUFDLENBQUNGLElBQUksQ0FBQ0ssTUFBTixDQUFkO0FBQ0EsUUFBTTtBQUFFQyxJQUFBQTtBQUFGLE1BQWdCSixDQUFDLENBQUNLLFFBQXhCO0FBQ0EsTUFBSUMsTUFBTSxHQUFHLEdBQWI7QUFDQSxNQUFJQyxjQUFjLEdBQUcsRUFBckI7QUFDQSxNQUFJQyxHQUFHLEdBQUMsRUFBUjtBQUVBUixFQUFBQSxDQUFDLENBQUNGLElBQUksQ0FBQ0ssTUFBTixDQUFELENBQWVNLElBQWYsQ0FBb0JULENBQUMsQ0FBQ1UsZ0JBQXRCLEVBQXdDQyxPQUF4QyxDQUFnREMsQ0FBQyxJQUFFO0FBR2pELFFBQUlDLENBQUMsR0FBQyxDQUFOO0FBQ0EsUUFBSUMsUUFBUSxHQUFJaEIsSUFBSSxDQUFDSyxNQUFMLENBQVlZLEtBQVosQ0FBa0JILENBQUMsQ0FBQ0ksS0FBRixDQUFRQyxLQUExQixFQUFrQ0wsQ0FBQyxDQUFDSSxLQUFGLENBQVFFLEdBQTFDLENBQWhCO0FBRUEsVUFBTUMsSUFBSSxHQUFFbkIsQ0FBQyxDQUFDYyxRQUFELENBQUQsQ0FBWUwsSUFBWixDQUFpQlQsQ0FBQyxDQUFDb0IsYUFBbkIsRUFBaUM7QUFDekNKLE1BQUFBLEtBQUssRUFBQztBQUNKSyxRQUFBQSxJQUFJLEVBQUc7QUFESDtBQURtQyxLQUFqQyxDQUFaO0FBT0EsUUFBSUMsVUFBVSxHQUFHVixDQUFDLENBQUNJLEtBQUYsQ0FBUU8sRUFBUixDQUFXQyxJQUE1QjtBQUVDLFVBQU1QLEtBQUssR0FBR0UsSUFBSSxDQUFDTSxPQUFMLENBQWEsQ0FBYixFQUFnQlQsS0FBaEIsQ0FBc0JDLEtBQXBDO0FBQ0QsVUFBTUMsR0FBRyxHQUFHQyxJQUFJLENBQUNNLE9BQUwsQ0FBYSxDQUFiLEVBQWdCVCxLQUFoQixDQUFzQkUsR0FBbEM7QUFHQVEsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlmLENBQVosRUFuQmlELENBb0JsRDtBQUNDOztBQUVELFFBQUlnQixnQkFBZ0IsR0FBRWhCLENBQUMsQ0FBQ0ksS0FBRixDQUFRYSxJQUFSLENBQWFBLElBQW5DO0FBR0VELElBQUFBLGdCQUFnQixDQUFDakIsT0FBakIsQ0FBeUJDLENBQUMsSUFBRTtBQUcxQixVQUFHQSxDQUFDLENBQUNJLEtBQUYsQ0FBUUssSUFBUixJQUFjLGtCQUFqQixFQUNDO0FBQ0k7QUFDRSxjQUFNUyxVQUFVLEdBQUdsQixDQUFDLENBQUNJLEtBQUYsQ0FBUWMsVUFBM0I7O0FBQ0EsYUFBSyxJQUFJakIsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR2lCLFVBQVUsQ0FBQ0MsTUFBL0IsRUFBdUNsQixDQUFDLEVBQXhDLEVBQ0E7QUFDRTtBQUNBTixVQUFBQSxjQUFjLENBQUN1QixVQUFVLENBQUNqQixDQUFELENBQVYsQ0FBY21CLEdBQWQsQ0FBa0JSLElBQW5CLENBQWQsR0FBeUNNLFVBQVUsQ0FBQ2pCLENBQUQsQ0FBVixDQUFjRyxLQUFkLENBQW9CQSxLQUE3RDtBQUNBVixVQUFBQSxNQUFNLElBQUssVUFBU3dCLFVBQVUsQ0FBQ2pCLENBQUQsQ0FBVixDQUFjbUIsR0FBZCxDQUFrQlIsSUFBSyxJQUFHTSxVQUFVLENBQUNqQixDQUFELENBQVYsQ0FBY21CLEdBQWQsQ0FBa0JSLElBQUsscUJBQW9CTSxVQUFVLENBQUNqQixDQUFELENBQVYsQ0FBY0csS0FBZCxDQUFvQkEsS0FBTSxPQUFuSDtBQUVEO0FBUU47QUFNTixLQTNCRSxFQTFCZ0QsQ0F1RGpEOztBQUVDUixJQUFBQSxHQUFHLElBQUlSLENBQUMsQ0FBQ2MsUUFBRCxDQUFELENBQVlMLElBQVosQ0FBaUJULENBQUMsQ0FBQ29CLGFBQW5CLEVBQWlDO0FBQ3JDSixNQUFBQSxLQUFLLEVBQUM7QUFDSkssUUFBQUEsSUFBSSxFQUFHO0FBREg7QUFEK0IsS0FBakMsRUFLTFksV0FMSyxDQUtRM0IsTUFMUixFQUtpQjRCLFFBTGpCLEVBQVA7QUFPRFIsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVluQixHQUFaO0FBQ0FGLElBQUFBLE1BQU0sR0FBQyxFQUFQO0FBSUQsR0FyRUQ7QUF1RUEsU0FBT0UsR0FBUDtBQUNEIiwic291cmNlUm9vdCI6IkU6XFxSZWFjdCBjb2RlbW9kXFwiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuICAgXHJcbmV4cG9ydCBjb25zdCBwYXJzZXIgPSBcImJhYmVsXCI7XHJcblxyXG4vLyBQcmVzcyBjdHJsK3NwYWNlIGZvciBjb2RlIGNvbXBsZXRpb25cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHJhbnNmb3JtZXIoZmlsZSwgYXBpKSB7XHJcbiAgY29uc3QgaiA9IGFwaS5qc2NvZGVzaGlmdDtcclxuICAvL2NvbnNvbGUubG9nKGooZmlsZS5zb3VyY2UpKTtcclxuICBjb25zdCByb290ID0gaihmaWxlLnNvdXJjZSk7XHJcbiAgY29uc3QgeyBzdGF0ZW1lbnQgfSA9IGoudGVtcGxhdGU7XHJcbiAgbGV0IHN0cmluZyA9IFwiIFwiO1xyXG4gIGxldCBzdGF0ZVZhcmlhYmxlcyA9IHt9O1xyXG4gIHZhciBmczI9XCJcIjtcclxuXHJcbiAgaihmaWxlLnNvdXJjZSkuZmluZChqLkNsYXNzRGVjbGFyYXRpb24pLmZvckVhY2gocD0+e1xyXG4gICAgXHJcbiAgICBcclxuICAgIGxldCBpPTE7XHJcbiAgICB2YXIgZnNfc2xpY2UgPSAoZmlsZS5zb3VyY2Uuc2xpY2UocC52YWx1ZS5zdGFydCAsIHAudmFsdWUuZW5kKSk7XHJcbiAgICBcclxuICAgIGNvbnN0IHByb3AgPWooZnNfc2xpY2UpLmZpbmQoai5DbGFzc1Byb3BlcnR5LHtcclxuICAgICAgICB2YWx1ZTp7XHJcbiAgICAgICAgICB0eXBlIDogXCJPYmplY3RFeHByZXNzaW9uXCIsXHJcbiAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGxldCBjbGFzc19uYW1lID0gcC52YWx1ZS5pZC5uYW1lO1xyXG4gICAgXHJcbiAgICAgY29uc3Qgc3RhcnQgPSBwcm9wLl9fcGF0aHNbMF0udmFsdWUuc3RhcnQ7XHJcbiAgICBjb25zdCBlbmQgPSBwcm9wLl9fcGF0aHNbMF0udmFsdWUuZW5kO1xyXG4gICAgXHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKHApO1xyXG4gICAvLyAgY29uc29sZS5sb2coY2xhc3NfbmFtZSk7XHJcbiAgICAvL2NvbnNvbGUubG9nKHAudmFsdWUuYm9keS5ib2R5KTtcclxuICAgIFxyXG4gICBsZXQgY2xhc3NfcHJvcGVydGllcz0gcC52YWx1ZS5ib2R5LmJvZHk7XHJcbiBcclxuICAgIFxyXG4gICAgIGNsYXNzX3Byb3BlcnRpZXMuZm9yRWFjaChwPT57XHJcbiAgICAgICBcclxuICAgICAgIFxyXG4gICAgICAgaWYocC52YWx1ZS50eXBlPT1cIk9iamVjdEV4cHJlc3Npb25cIilcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2cocC52YWx1ZSk7XHJcbiAgICAgICAgICAgICAgY29uc3QgcHJvcGVydGllcyA9IHAudmFsdWUucHJvcGVydGllcztcclxuICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BlcnRpZXMubGVuZ3RoOyBpKyspIFxyXG4gICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2cocHJvcGVydGllc1tpXS5rZXkubmFtZSArIFwiIFwiICsgcHJvcGVydGllc1tpXS52YWx1ZS52YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICBzdGF0ZVZhcmlhYmxlc1twcm9wZXJ0aWVzW2ldLmtleS5uYW1lXSA9IHByb3BlcnRpZXNbaV0udmFsdWUudmFsdWU7XHJcbiAgICAgICAgICAgICAgICBzdHJpbmcgKz0gYGNvbnN0IFske3Byb3BlcnRpZXNbaV0ua2V5Lm5hbWV9LCR7cHJvcGVydGllc1tpXS5rZXkubmFtZX1TZXR0ZXJdPXVzZVN0YXRlKCcke3Byb3BlcnRpZXNbaV0udmFsdWUudmFsdWV9Jyk7XFxuYDtcclxuXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgXHJcbiAgICAgICAgIFxyXG5cclxuXHJcbiAgICAgICAgICAgICBcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgXHJcblxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICBcclxuICB9KVxyXG4gICAgICAgICAgICBcclxuICAgIC8vY29uc29sZS5sb2coc3RyaW5nKTtcclxuICAgIFxyXG4gICAgIGZzMiArPSBqKGZzX3NsaWNlKS5maW5kKGouQ2xhc3NQcm9wZXJ0eSx7XHJcbiAgICAgICAgdmFsdWU6e1xyXG4gICAgICAgICAgdHlwZSA6IFwiT2JqZWN0RXhwcmVzc2lvblwiLFxyXG4gICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9KS5yZXBsYWNlV2l0aCggc3RyaW5nICkudG9Tb3VyY2UoKTtcclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coZnMyKTtcclxuICAgIHN0cmluZz1cIlwiO1xyXG5cclxuICAgIFxyXG4gICAgXHJcbiAgfSlcclxuICAgIFxyXG4gIHJldHVybiBmczI7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "transformToUseStateHook.js"
      ],
      "names": [
        "parser",
        "transformer",
        "file",
        "api",
        "j",
        "jscodeshift",
        "root",
        "source",
        "statement",
        "template",
        "string",
        "stateVariables",
        "fs2",
        "find",
        "ClassDeclaration",
        "forEach",
        "p",
        "i",
        "fs_slice",
        "slice",
        "value",
        "start",
        "end",
        "prop",
        "ClassProperty",
        "type",
        "class_name",
        "id",
        "name",
        "__paths",
        "console",
        "log",
        "class_properties",
        "body",
        "properties",
        "length",
        "key",
        "replaceWith",
        "toSource"
      ],
      "mappings": ";;;;;;;AAEO,MAAMA,MAAM,GAAG,OAAf,C,CAEP;;;;AACe,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,CAAC,GAAGD,GAAG,CAACE,WAAd,CAD6C,CAE7C;;AACA,QAAMC,IAAI,GAAGF,CAAC,CAACF,IAAI,CAACK,MAAN,CAAd;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBJ,CAAC,CAACK,QAAxB;AACA,MAAIC,MAAM,GAAG,GAAb;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,GAAG,GAAC,EAAR;AAEAR,EAAAA,CAAC,CAACF,IAAI,CAACK,MAAN,CAAD,CAAeM,IAAf,CAAoBT,CAAC,CAACU,gBAAtB,EAAwCC,OAAxC,CAAgDC,CAAC,IAAE;AAGjD,QAAIC,CAAC,GAAC,CAAN;AACA,QAAIC,QAAQ,GAAIhB,IAAI,CAACK,MAAL,CAAYY,KAAZ,CAAkBH,CAAC,CAACI,KAAF,CAAQC,KAA1B,EAAkCL,CAAC,CAACI,KAAF,CAAQE,GAA1C,CAAhB;AAEA,UAAMC,IAAI,GAAEnB,CAAC,CAACc,QAAD,CAAD,CAAYL,IAAZ,CAAiBT,CAAC,CAACoB,aAAnB,EAAiC;AACzCJ,MAAAA,KAAK,EAAC;AACJK,QAAAA,IAAI,EAAG;AADH;AADmC,KAAjC,CAAZ;AAOA,QAAIC,UAAU,GAAGV,CAAC,CAACI,KAAF,CAAQO,EAAR,CAAWC,IAA5B;AAEC,UAAMP,KAAK,GAAGE,IAAI,CAACM,OAAL,CAAa,CAAb,EAAgBT,KAAhB,CAAsBC,KAApC;AACD,UAAMC,GAAG,GAAGC,IAAI,CAACM,OAAL,CAAa,CAAb,EAAgBT,KAAhB,CAAsBE,GAAlC;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAYf,CAAZ,EAnBiD,CAoBlD;AACC;;AAED,QAAIgB,gBAAgB,GAAEhB,CAAC,CAACI,KAAF,CAAQa,IAAR,CAAaA,IAAnC;AAGED,IAAAA,gBAAgB,CAACjB,OAAjB,CAAyBC,CAAC,IAAE;AAG1B,UAAGA,CAAC,CAACI,KAAF,CAAQK,IAAR,IAAc,kBAAjB,EACC;AACI;AACE,cAAMS,UAAU,GAAGlB,CAAC,CAACI,KAAF,CAAQc,UAA3B;;AACA,aAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiB,UAAU,CAACC,MAA/B,EAAuClB,CAAC,EAAxC,EACA;AACE;AACAN,UAAAA,cAAc,CAACuB,UAAU,CAACjB,CAAD,CAAV,CAAcmB,GAAd,CAAkBR,IAAnB,CAAd,GAAyCM,UAAU,CAACjB,CAAD,CAAV,CAAcG,KAAd,CAAoBA,KAA7D;AACAV,UAAAA,MAAM,IAAK,UAASwB,UAAU,CAACjB,CAAD,CAAV,CAAcmB,GAAd,CAAkBR,IAAK,IAAGM,UAAU,CAACjB,CAAD,CAAV,CAAcmB,GAAd,CAAkBR,IAAK,qBAAoBM,UAAU,CAACjB,CAAD,CAAV,CAAcG,KAAd,CAAoBA,KAAM,OAAnH;AAED;AAQN;AAMN,KA3BE,EA1BgD,CAuDjD;;AAECR,IAAAA,GAAG,IAAIR,CAAC,CAACc,QAAD,CAAD,CAAYL,IAAZ,CAAiBT,CAAC,CAACoB,aAAnB,EAAiC;AACrCJ,MAAAA,KAAK,EAAC;AACJK,QAAAA,IAAI,EAAG;AADH;AAD+B,KAAjC,EAKLY,WALK,CAKQ3B,MALR,EAKiB4B,QALjB,EAAP;AAODR,IAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAZ;AACAF,IAAAA,MAAM,GAAC,EAAP;AAID,GArED;AAuEA,SAAOE,GAAP;AACD",
      "sourceRoot": "E:\\React codemod\\",
      "sourcesContent": [
        "\r\n   \r\nexport const parser = \"babel\";\r\n\r\n// Press ctrl+space for code completion\r\nexport default function transformer(file, api) {\r\n  const j = api.jscodeshift;\r\n  //console.log(j(file.source));\r\n  const root = j(file.source);\r\n  const { statement } = j.template;\r\n  let string = \" \";\r\n  let stateVariables = {};\r\n  var fs2=\"\";\r\n\r\n  j(file.source).find(j.ClassDeclaration).forEach(p=>{\r\n    \r\n    \r\n    let i=1;\r\n    var fs_slice = (file.source.slice(p.value.start , p.value.end));\r\n    \r\n    const prop =j(fs_slice).find(j.ClassProperty,{\r\n        value:{\r\n          type : \"ObjectExpression\",\r\n        \r\n        }\r\n    });\r\n    \r\n    let class_name = p.value.id.name;\r\n    \r\n     const start = prop.__paths[0].value.start;\r\n    const end = prop.__paths[0].value.end;\r\n    \r\n    \r\n    console.log(p);\r\n   //  console.log(class_name);\r\n    //console.log(p.value.body.body);\r\n    \r\n   let class_properties= p.value.body.body;\r\n \r\n    \r\n     class_properties.forEach(p=>{\r\n       \r\n       \r\n       if(p.value.type==\"ObjectExpression\")\r\n        {\r\n            //console.log(p.value);\r\n              const properties = p.value.properties;\r\n              for (let i = 0; i < properties.length; i++) \r\n              {\r\n                //console.log(properties[i].key.name + \" \" + properties[i].value.value);\r\n                stateVariables[properties[i].key.name] = properties[i].value.value;\r\n                string += `const [${properties[i].key.name},${properties[i].key.name}Setter]=useState('${properties[i].value.value}');\\n`;\r\n\r\n              }\r\n        \r\n             \r\n         \r\n\r\n\r\n             \r\n\r\n        }\r\n       \r\n\r\n            \r\n                                  \r\n         \r\n  })\r\n            \r\n    //console.log(string);\r\n    \r\n     fs2 += j(fs_slice).find(j.ClassProperty,{\r\n        value:{\r\n          type : \"ObjectExpression\",\r\n         \r\n        }\r\n    }).replaceWith( string ).toSource();\r\n    \r\n    console.log(fs2);\r\n    string=\"\";\r\n\r\n    \r\n    \r\n  })\r\n    \r\n  return fs2;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1634447022181
  }
}